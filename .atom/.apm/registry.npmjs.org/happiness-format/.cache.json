{"_id":"happiness-format","_rev":"1-1e4949c1bdce8060eae9b54587a4f499","name":"happiness-format","description":"attempts to reformat javascript to comply with jedwatson/happiness style","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"happiness-format","version":"1.0.0","description":"attempts to reformat javascript to comply with jedwatson/happiness style","main":"index.js","bin":{"happiness-format":"./bin.js"},"scripts":{"test":"standard && tape test/*.js | tap-spec","test-file":"<test.js ./bin.js | happiness","failing":"standard && tape test/failing/*.js | tap-spec"},"repository":{"type":"git","url":"https://github.com/martinheidegger/hapiness-format.git"},"author":{"name":"max ogden"},"license":"BSD","bugs":{"url":"https://github.com/martinheidegger/hapiness-format/issues"},"homepage":"https://github.com/martinheidegger/hapiness-format","dependencies":{"deglob":"^1.0.0","esformatter":"^0.7.0","esformatter-eol-last":"^1.0.0","esformatter-jsx":"^1.3.0","esformatter-literal-notation":"^1.0.0","esformatter-quotes":"^1.0.0","esformatter-semicolons":"^1.1.0","esformatter-spaced-lined-comment":"^2.0.0","minimist":"^1.1.0","stdin":"0.0.1"},"devDependencies":{"concat-stream":"^1.4.7","debug":"^2.1.1","once":"^1.3.1","skip-stream":"0.0.3","standard":"*","split":"^1.0.0","stream-reduce":"^1.0.3","tap-spec":"^2.2.2","tape":"^3.5.0"},"standard":{"ignore":["test.js","**test/failing/**"]},"gitHead":"5a0fdaab1673efdbb8adce46dd12ab68763c5eaa","_id":"happiness-format@1.0.0","_shasum":"c6109f8b950d4ef65fa414b8b25d1f9b9a3cdfe7","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.4","_npmUser":{"name":"leichtgewicht","email":"mh@leichtgewicht.at"},"maintainers":[{"name":"leichtgewicht","email":"mh@leichtgewicht.at"}],"dist":{"shasum":"c6109f8b950d4ef65fa414b8b25d1f9b9a3cdfe7","tarball":"http://registry.npmjs.org/happiness-format/-/happiness-format-1.0.0.tgz"},"directories":{}}},"readme":"\n# happiness-format\n  This is a fork of [semistandard-format](https://github.com/ricardofbarros/semistandard-format) same concept but with semicolons and tabs.\n\n## Installation\n\n  Install with npm\n\n    $ npm install -g happiness-format\n\n## Example Usage\n\n  Output all formatted javascript in a directory and subdirectories to stdout\n\n    $ happiness-format\n\n  Format all javascript files, overwriting them into standard format\n\n    $ happiness-format -w\n\n  Format javascript over stdin\n\n    $ happiness-format < file.js > formatted-file.js\n\n  Format and overwrite specific files\n\n    $ happiness-format -w file1.js file2.js\n\n### Editor plugins\n\n  - Sublime Text: [sublime-standard-format](https://packagecontrol.io/packages/StandardFormat)\n  - Atom: [atom-standard-formatter](https://atom.io/packages/standard-formatter)\n\n### Science :mortar_board:\n\n  > A new step should be added to the modification cycle: modifying the program to make it readable.\n\n  [Elshoff & Marcotty, 1982](http://dl.acm.org/citation.cfm?id=358596)\n","maintainers":[{"name":"leichtgewicht","email":"mh@leichtgewicht.at"}],"time":{"modified":"2015-07-26T19:21:49.225Z","created":"2015-07-26T19:21:49.225Z","1.0.0":"2015-07-26T19:21:49.225Z"},"homepage":"https://github.com/martinheidegger/hapiness-format","repository":{"type":"git","url":"https://github.com/martinheidegger/hapiness-format.git"},"author":{"name":"max ogden"},"bugs":{"url":"https://github.com/martinheidegger/hapiness-format/issues"},"license":"BSD","readmeFilename":"readme.md","_attachments":{},"_etag":"\"8ZBTJISLQTEYLUCXXZ26NEABW\""}
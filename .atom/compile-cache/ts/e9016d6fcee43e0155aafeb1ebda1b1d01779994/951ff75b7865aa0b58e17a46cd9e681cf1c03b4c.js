// Type definitions for es6-promises
// Project: https://github.com/jakearchibald/ES6-Promises
// Definitions by: Fran√ßois de Campredon <https://github.com/fdecampredon/>
// Definitions: https://github.com/borisyankov/DefinitelyTyped
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/anas/.atom/packages/atom-typescript/lib/typings/bluebird.d.ts

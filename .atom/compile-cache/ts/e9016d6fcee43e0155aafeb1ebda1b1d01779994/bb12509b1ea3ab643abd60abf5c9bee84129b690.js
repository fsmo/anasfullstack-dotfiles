var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var view = require('./view');
var $ = view.$;
var TooltipView = (function (_super) {
    __extends(TooltipView, _super);
    function TooltipView(rect) {
        _super.call(this, rect);
        this.rect = rect;
        $(document.body).append(this.$);
        this.updatePosition();
    }
    TooltipView.content = function () {
        var _this = this;
        return this.div({ class: 'atom-typescript-tooltip tooltip' }, function () {
            _this.div({ class: 'tooltip-inner', outlet: 'inner' });
        });
    };
    TooltipView.prototype.updateText = function (text) {
        this.inner.html(text);
        this.updatePosition();
        this.$.fadeTo(300, 1);
    };
    TooltipView.prototype.updatePosition = function () {
        var offset = 10;
        var left = this.rect.right;
        var top = this.rect.bottom;
        var right = undefined;
        // X axis adjust
        if (left + this.$[0].offsetWidth >= view.$(document.body).width())
            left = view.$(document.body).width() - this.$[0].offsetWidth - offset;
        if (left < 0) {
            this.$.css({ 'white-space': 'pre-wrap' });
            left = offset;
            right = offset;
        }
        // Y axis adjust
        if (top + this.$[0].offsetHeight >= $(document.body).height()) {
            top = this.rect.top - this.$[0].offsetHeight;
        }
        this.$.css({ left: left, top: top, right: right });
    };
    return TooltipView;
})(view.View);
exports.TooltipView = TooltipView;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2FuYXMvLmF0b20vcGFja2FnZXMvYXRvbS10eXBlc2NyaXB0L2xpYi9tYWluL2F0b20vdmlld3MvdG9vbHRpcFZpZXcudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmFzLy5hdG9tL3BhY2thZ2VzL2F0b20tdHlwZXNjcmlwdC9saWIvbWFpbi9hdG9tL3ZpZXdzL3Rvb2x0aXBWaWV3LnRzIl0sIm5hbWVzIjpbIlRvb2x0aXBWaWV3IiwiVG9vbHRpcFZpZXcuY29uc3RydWN0b3IiLCJUb29sdGlwVmlldy5jb250ZW50IiwiVG9vbHRpcFZpZXcudXBkYXRlVGV4dCIsIlRvb2x0aXBWaWV3LnVwZGF0ZVBvc2l0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFPLElBQUksV0FBVyxRQUFRLENBQUMsQ0FBQztBQUNoQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBU2YsSUFBYSxXQUFXO0lBQVNBLFVBQXBCQSxXQUFXQSxVQUF3QkE7SUFFNUNBLFNBRlNBLFdBQVdBLENBRURBLElBQVVBO1FBQ3pCQyxrQkFBTUEsSUFBSUEsQ0FBQ0EsQ0FBQ0E7UUFER0EsU0FBSUEsR0FBSkEsSUFBSUEsQ0FBTUE7UUFFekJBLENBQUNBLENBQUNBLFFBQVFBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1FBQ2hDQSxJQUFJQSxDQUFDQSxjQUFjQSxFQUFFQSxDQUFBQTtJQUN6QkEsQ0FBQ0E7SUFHTUQsbUJBQU9BLEdBQWRBO1FBQUFFLGlCQUlDQTtRQUhHQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxLQUFLQSxFQUFFQSxpQ0FBaUNBLEVBQUVBLEVBQUVBO1lBQzFEQSxLQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxFQUFFQSxLQUFLQSxFQUFFQSxlQUFlQSxFQUFFQSxNQUFNQSxFQUFFQSxPQUFPQSxFQUFFQSxDQUFDQSxDQUFBQTtRQUN6REEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDUEEsQ0FBQ0E7SUFFREYsZ0NBQVVBLEdBQVZBLFVBQVdBLElBQVlBO1FBQ25CRyxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtRQUN0QkEsSUFBSUEsQ0FBQ0EsY0FBY0EsRUFBRUEsQ0FBQ0E7UUFDdEJBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLEdBQUdBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO0lBQzFCQSxDQUFDQTtJQUVESCxvQ0FBY0EsR0FBZEE7UUFDSUksSUFBSUEsTUFBTUEsR0FBR0EsRUFBRUEsQ0FBQ0E7UUFDaEJBLElBQUlBLElBQUlBLEdBQUdBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBO1FBQzNCQSxJQUFJQSxHQUFHQSxHQUFHQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQSxDQUFDQTtRQUMzQkEsSUFBSUEsS0FBS0EsR0FBR0EsU0FBU0EsQ0FBQ0E7UUFHdEJBLEFBREFBLGdCQUFnQkE7UUFDaEJBLEVBQUVBLENBQUNBLENBQUNBLElBQUlBLEdBQUdBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLFdBQVdBLElBQUlBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLFFBQVFBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO1lBQzlEQSxJQUFJQSxHQUFHQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxRQUFRQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxLQUFLQSxFQUFFQSxHQUFHQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxXQUFXQSxHQUFHQSxNQUFNQSxDQUFDQTtRQUMxRUEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsSUFBSUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDWEEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsYUFBYUEsRUFBRUEsVUFBVUEsRUFBRUEsQ0FBQ0EsQ0FBQUE7WUFDekNBLElBQUlBLEdBQUdBLE1BQU1BLENBQUFBO1lBQ2JBLEtBQUtBLEdBQUdBLE1BQU1BLENBQUFBO1FBQ2xCQSxDQUFDQTtRQUdEQSxBQURBQSxnQkFBZ0JBO1FBQ2hCQSxFQUFFQSxDQUFDQSxDQUFDQSxHQUFHQSxHQUFHQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxZQUFZQSxJQUFJQSxDQUFDQSxDQUFDQSxRQUFRQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUM1REEsR0FBR0EsR0FBR0EsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsR0FBR0EsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsWUFBWUEsQ0FBQUE7UUFDaERBLENBQUNBO1FBRURBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLElBQUlBLE1BQUFBLEVBQUVBLEdBQUdBLEtBQUFBLEVBQUVBLEtBQUtBLE9BQUFBLEVBQUVBLENBQUNBLENBQUNBO0lBQ3JDQSxDQUFDQTtJQUNMSixrQkFBQ0E7QUFBREEsQ0FBQ0EsQUEzQ0QsRUFBaUMsSUFBSSxDQUFDLElBQUksRUEyQ3pDO0FBM0NZLG1CQUFXLEdBQVgsV0EyQ1osQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2aWV3ID0gcmVxdWlyZSgnLi92aWV3Jyk7XG52YXIgJCA9IHZpZXcuJDtcblxuaW50ZXJmYWNlIFJlY3Qge1xuICAgIGxlZnQ6IG51bWJlcjtcbiAgICByaWdodDogbnVtYmVyO1xuICAgIHRvcDogbnVtYmVyO1xuICAgIGJvdHRvbTogbnVtYmVyO1xufVxuXG5leHBvcnQgY2xhc3MgVG9vbHRpcFZpZXcgZXh0ZW5kcyB2aWV3LlZpZXc8UmVjdD4ge1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIHJlY3Q6IFJlY3QpIHtcbiAgICAgICAgc3VwZXIocmVjdCk7XG4gICAgICAgICQoZG9jdW1lbnQuYm9keSkuYXBwZW5kKHRoaXMuJCk7XG4gICAgICAgIHRoaXMudXBkYXRlUG9zaXRpb24oKVxuICAgIH1cblxuICAgIHByaXZhdGUgaW5uZXI6IEpRdWVyeTtcbiAgICBzdGF0aWMgY29udGVudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGl2KHsgY2xhc3M6ICdhdG9tLXR5cGVzY3JpcHQtdG9vbHRpcCB0b29sdGlwJyB9LCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRpdih7IGNsYXNzOiAndG9vbHRpcC1pbm5lcicsIG91dGxldDogJ2lubmVyJyB9KVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICB1cGRhdGVUZXh0KHRleHQ6IHN0cmluZykge1xuICAgICAgICB0aGlzLmlubmVyLmh0bWwodGV4dCk7XG4gICAgICAgIHRoaXMudXBkYXRlUG9zaXRpb24oKTtcbiAgICAgICAgdGhpcy4kLmZhZGVUbygzMDAsIDEpO1xuICAgIH1cblxuICAgIHVwZGF0ZVBvc2l0aW9uKCkge1xuICAgICAgICB2YXIgb2Zmc2V0ID0gMTA7XG4gICAgICAgIHZhciBsZWZ0ID0gdGhpcy5yZWN0LnJpZ2h0O1xuICAgICAgICB2YXIgdG9wID0gdGhpcy5yZWN0LmJvdHRvbTtcbiAgICAgICAgdmFyIHJpZ2h0ID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIC8vIFggYXhpcyBhZGp1c3RcbiAgICAgICAgaWYgKGxlZnQgKyB0aGlzLiRbMF0ub2Zmc2V0V2lkdGggPj0gdmlldy4kKGRvY3VtZW50LmJvZHkpLndpZHRoKCkpXG4gICAgICAgICAgICBsZWZ0ID0gdmlldy4kKGRvY3VtZW50LmJvZHkpLndpZHRoKCkgLSB0aGlzLiRbMF0ub2Zmc2V0V2lkdGggLSBvZmZzZXQ7XG4gICAgICAgIGlmIChsZWZ0IDwgMCkge1xuICAgICAgICAgICAgdGhpcy4kLmNzcyh7ICd3aGl0ZS1zcGFjZSc6ICdwcmUtd3JhcCcgfSlcbiAgICAgICAgICAgIGxlZnQgPSBvZmZzZXRcbiAgICAgICAgICAgIHJpZ2h0ID0gb2Zmc2V0XG4gICAgICAgIH1cblxuICAgICAgICAvLyBZIGF4aXMgYWRqdXN0XG4gICAgICAgIGlmICh0b3AgKyB0aGlzLiRbMF0ub2Zmc2V0SGVpZ2h0ID49ICQoZG9jdW1lbnQuYm9keSkuaGVpZ2h0KCkpIHtcbiAgICAgICAgICAgIHRvcCA9IHRoaXMucmVjdC50b3AgLSB0aGlzLiRbMF0ub2Zmc2V0SGVpZ2h0XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLiQuY3NzKHsgbGVmdCwgdG9wLCByaWdodCB9KTtcbiAgICB9XG59XG4iXX0=
//# sourceURL=/Users/anas/.atom/packages/atom-typescript/lib/main/atom/views/tooltipView.ts

// Type definitions for React v0.13.1 (internal and external module)
// Project: http://facebook.github.io/react/
// Definitions by: Asana <https://asana.com>, AssureSign <http://www.assuresign.com>
// Definitions: https://github.com/borisyankov/DefinitelyTyped
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/anas/.atom/packages/atom-typescript/lib/typings/react/react.d.ts
